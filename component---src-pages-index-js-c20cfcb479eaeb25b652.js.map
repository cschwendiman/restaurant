{"version":3,"sources":["webpack:///./src/components/inventory/item.js","webpack:///./src/components/inventory/filter.js","webpack:///./src/components/inventory/inventory.js","webpack:///./src/pages/index.js","webpack:///./node_modules/classnames/index.js"],"names":["Item","name","qty","colors","className","join","Filter","toggleFilter","onClick","Inventory","items","initialFilterState","reduce","acc","item","forEach","color","useState","filters","setFilters","Object","keys","map","filter","key","classNames","id","IndexPage","data","itens","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","call","module","exports"],"mappings":"ihBAmBeA,G,UAhBF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,IAAuB,IAAlBC,cAAkB,MAAT,GAAS,EACzC,OACI,wBAAIC,UAAWD,EAAOE,KAAK,MACvB,4BAAKJ,GACL,4BAAKE,EAAOE,QACZ,4BAAKH,MCQFI,EAbA,SAAC,GAA4B,IAA1BL,EAAyB,EAAzBA,KAAMM,EAAmB,EAAnBA,aACpB,OACI,4BAAQH,UAAWH,EAAMO,QAAS,kBAAMD,EAAaN,KAChDA,IC+CEQ,G,UA7CG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACXC,EAAqBD,EAAME,QAAO,SAACC,EAAKC,GAM1C,OALIA,EAAKX,QACLW,EAAKX,OAAOY,SAAQ,SAAAC,GAChBH,EAAIG,IAAS,KAGdH,IACR,IAR0B,EASCI,mBAASN,GAAhCO,EATsB,KASbC,EATa,KAU7B,SAASZ,EAAaN,GAAO,IAAD,EACxBkB,EAAW,OAAD,UAAMD,IAAN,MAAgBjB,IAAQiB,EAAQjB,GAAhC,KAGd,OACI,yBAAKG,UAAW,aACZ,yCACA,yBAAKA,UAAW,WACXgB,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GACtB,OAAQ,kBAAC,EAAD,CAAQC,IAAKD,EAAQtB,KAAMsB,EAAQhB,aAAcA,QAIjE,2BAAOH,UAAWqB,IAAWP,IACzB,+BACI,4BACI,oCACA,sCACA,0CAGR,+BACKR,EAAMY,KAAI,SAAAR,GACP,OAAQ,kBAAC,EAAD,eAAMU,IAAKV,EAAKY,IAAQZ,Y,YChCzCa,UAJG,kBAChB,kBAAC,EAAD,CAAWjB,MAAOkB,EAAKC,U,qBCNzB,QAAQ,QASR,WACE,aAEA,IAAIC,EAAS,GAAGC,eAEhB,SAASN,IAGP,IAFA,IAAIO,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC3C,IAAIM,EAAQhB,EAAWiB,MAAM,KAAMN,GAE/BK,GACFT,EAAQM,KAAKG,QAEV,GAAgB,WAAZJ,EACT,IAAK,IAAIb,KAAOY,EACVN,EAAOa,KAAKP,EAAKZ,IAAQY,EAAIZ,IAC/BQ,EAAQM,KAAKd,IAMrB,OAAOQ,EAAQ3B,KAAK,KAGeuC,EAAOC,SAC1CpB,EAAoB,QAAIA,EACxBmB,EAAOC,QAAUpB,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aAxCL","file":"component---src-pages-index-js-c20cfcb479eaeb25b652.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Item = ({ name, qty, colors = [] }) => {\n    return (\n        <tr className={colors.join(' ')}>\n            <td>{name}</td>\n            <td>{colors.join()}</td>\n            <td>{qty}</td>\n        </tr>\n    )\n}\n\nItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    qty: PropTypes.string.isRequired,\n    colors: PropTypes.array,\n}\n  \nexport default Item","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Filter = ({ name, toggleFilter }) => {\n    return (\n        <button className={name} onClick={() => toggleFilter(name)}>\n            {name}\n        </button>\n    )\n}\n\nFilter.propTypes = {\n    name: PropTypes.string.isRequired,\n    toggleFilter: PropTypes.func.isRequired,\n}\n  \nexport default Filter","import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\n\nimport Item from \"./item\"\nimport Filter from \"./filter\"\nimport \"./inventory.less\"\n\nconst Inventory = ({ items }) => {\n    const initialFilterState = items.reduce((acc, item) => {\n        if (item.colors) {\n            item.colors.forEach(color => {\n                acc[color] = false;\n            });\n        }\n        return acc;\n    }, {});\n    const [filters, setFilters] = useState(initialFilterState);\n    function toggleFilter(name) {\n        setFilters({ ...filters, [name]: !filters[name] });\n    }\n\n    return (\n        <div className={'inventory'}>\n            <h2>Inventory</h2>\n            <div className={'filters'}>\n                {Object.keys(filters).map(filter => {\n                    return (<Filter key={filter} name={filter} toggleFilter={toggleFilter} />);\n                })}\n            </div>\n\n            <table className={classNames(filters)}>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Colors</th>\n                        <th>Quantity</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {items.map(item => {\n                        return (<Item key={item.id} {...item} />);\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nInventory.propTypes = {\n  items: PropTypes.array.isRequired,\n}\n\nexport default Inventory\n","import React from \"react\"\n\nimport Inventory from '../components/inventory/inventory'\nimport { default as data } from '../data/get_items.json'\n\nconst IndexPage = () => (\n  <Inventory items={data.itens} />\n)\n\nexport default IndexPage\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();"],"sourceRoot":""}